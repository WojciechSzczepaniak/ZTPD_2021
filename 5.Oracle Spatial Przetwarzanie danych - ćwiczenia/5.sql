-- zadanie 1 a
INSERT INTO USER_SDO_GEOM_METADATA VALUES(
'FIGURY', 'KSZTALTY', MDSYS.SDO_DIM_ARRAY(MDSYS.SDO_DIM_ELEMENT('X', 0, 8, 0.01),
MDSYS.SDO_DIM_ELEMENT('Y',0,7,0.01), NULL);

-- zadanie 1 b
SELECT SDO_TUNE.ESTIMATE_RTREE_INDEX_SIZE(3000000,8192,10,2,0) FROM FIGURY;

-- zadanie 1 c
CREATE INDEX r_tree ON FIGURY(KSZTALT) INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2;

-- zadanie 1 d
SELECT ID FROM FIGURY WHERE SDO_FILTER(KSZTALT, SDO_GEOMETRY(
2001,NULL,SDO_POINT_TYPE(3,3,NULL), NULL, NULL)) = 'TRUE';

-- zadanie 1 e
SELECT ID FROM FIGURY WHERE SDO_RELATE(KSZTALT, SDO_GEOMETRY(
2001,NULL,SDO_POINT_TYPE(3,3,NULL), NULL,NULL),'mask=ANTYINTERACT') = 'TRUE';

-- zadanie 2 a
SELECT C.CITY_NAME, SDO_NN_DISTANCE(1) DISTANCE FROM MAJOR_CITIES C
WHERE SDO_NN(GEOM, MDSYS.SDO_GEOMETRY(2001, 8307, 
NULL, MDSYS.SDO_ELEM_INFO_ARRAY(1, 1, 1),
MDSYS.SDO_ORDINATE_ARRAY(21.0118794, 52.2449452)),'unit=km') AND CITY_NAME != 'Warsaw'
ORDERY BY DISTANCE ASC
FETCH FIRST 9 ROWS ONLY;

-- zadanie 2 b
SELECT C.CITY_NAME FROM MAJOR_CITIES C
WHERE SDO_WITHIN_DISTANCE(C.GEOM, SDO_GEOMETRY(2001, 8307, NULL, 
MDSYS.SDO_ELEM_INFO_ARRAY(1,1,1), MDSYS.SDO_ORDINATE_ARRAY(21.0118794, 52.2449452)),
'distance=100 unit=km') = 'TRUE' AND CITY_NAME != 'Warsaw';

-- zadanie 2 c
SELECT CNTRY_NAME CITY_NAME FROM MAJOR_CITIES WHERE
SDO_RELATE(GEOM, (SELECT GEOM FROM COUNTRY_BOUNDARIES 
WHERE CNTRY_NAME = 'Slovakia', 'mask=ANTYINTERACT') = 'TRUE';

-- zadanie 2 d
SELECT CNTRY_ NAME, SDO_GEOM.SDO_DISTANCE(GEOM, (SELECT GEOM FROM COUNTRY_BOUNDARIES 
WHERE CNTRY_NAME = 'Poland'), 1, 'unit=km')
FROM COUNTRY_BOUNDARIES WHERE SDO_RELATE(GEOM,
(SELECT GEOM FROM COUNTRY_BOUNDARIES WHERE CNTRY_NAME = 'Poland'), 'mask=TOUCH') != 
'TRUE' AND CNTRY_NAME != 'Poland';

-- zadanie 3 a
SELECT CNTRY_ NAME, SDO_GEOM.SDO_LENGTH(SDO_GEOM.SDO_INTERSECTION(GEOM, (SELECT GEOM FROM COUNTRY_BOUNDARIES 
WHERE CNTRY_NAME = 'Poland'), 1),1 'unit=km') AS ODLEGLOSC
FROM COUNTRY_BOUNDARIES WHERE SDO_RELATE(GEOM,
(SELECT GEOM FROM COUNTRY_BOUNDARIES WHERE CNTRY_NAME = 'Poland'), 'mask=TOUCH') = 'TRUE';

-- zadanie 3 b
SELECT CNTRY_NAME FROM COUNTRY_BOUNDARIES
ORDER BY SDO_GEOM.SDO_AREA(GEOM) DESC FETCH FIRST 1 ROWN ONLY;

-- zadanie 3 c
SELECT SDO_GEOM.SDO_AREA(SDO_GEOM.SDO_MBR(
SDO_AGGR_UNION(C1.GEOM, C2.GEOM, 1)), 1, unit='SQ_KM') AS SQ_KM
FROM MAJOR_CITIES C1, MAJOR_CITIES C2
WHERE C1.CITY_NAME = 'Warsaw' AND C2.CITY_NAME = 'Lodz';

-- zadanie 3 d
SELECT SDO_GEOM.SDO_UNION(C.GEOM, B.GEOM,1).GET_DIMS() ||
SDO_GEOM.SDO_UNION(C.GEOM, B.GEOM,1).GET_LRS_DIM() ||
LPAD(SDO_GEOM.SDO_UNION(C.GEOM, B.GEOM, 1).GET_GTYPE(), 2, '0') AS GEOM
FROM MAJOR_CITIES C, COUNTRY_BOUNDARIES B 
WHERE C.CITY_NAME = 'Prague' AND B.CNTRY_NAME = 'Poland';

-- zadanie 3 e
SELECT B.CITY_NAME, CNTRY_NAME, SDO_GEOM.SDO_DISTANCE(B.GEOM, 
SDO_GEOM.SDO_CENTROID(B.GEOM,1),1) AS DISTANCE
FROM MAJOR_CITIES C JOIN COUNTRY_BOUNDARIES B USING(CNTRY_NAME)
ORDER BY DISTANCE
FETCH FIRST 1 ROW ONLY;

-- zadanie 3 f
SELECT R.NAME, SUM(SDO_GEOM.SDO_LENGTH(SDO_GEOM.SDO_INTERSECTION(R.GEOM, B.GEOM, 1), 1, 'unit=km')) AS DLUGOSC
FROM COUNTRY_BOUNDARIES B, RIVERS R
WHERE B.CNTRY_NAME = 'Poland' AND 
SDO_RELATE(B.GEOM, R.GEOM, 'mask=ANYINTERACT') = 'TRUE'
GROUP BY R.name;