-- zadanie 1 a
CREATE TABLE A6_LRS(GEOM SDO_GEOMETRY);

-- zadanie 1 b
INSERT INTO A6_LRS SELECT SAR.GEOM
FROM MAJOR_CITIES C, STREETS_AND_RAILROADS SAR
WHERE SDO_WITHING_DISTANCE(C.GEOM, SAR.GEOM,
 'distance=10 unit=km') = 'TRUE' AND C.CITY_NAME = 'Koszalin'
 
-- zadanie 1 c
SELECT SDO_GEOM.SDO_LENGTH(GEOM, 1, 'unit=km') AS DISTANCE,
ST_LINESTRING(GEOM).ST_NUMPOINTS() AS ST_NUMPOINTS FROM A6_LRS;

-- zadanie 1 d
UPDATE A6_LRS SET GEOM=SDO_LRS.CONVERT_TO_LRS_GEOM(GEOM, 0, 276.681);

-- zadanie 1 e
INSERT INTO USER_SDO_GEOM_METADATA VALUES(
'A6_LRS','GEOM', MDSYS.SDO_DIM_ARRAY(
MDSYS.SDO_DIM_ELEMENT('X', 12.603676, 26.369824, 1),
MDSYS.SDO_DIM_ELEMENT('Y', 45.8464, 58.0213, 1),
MDSYS.SDO_DIM_ELEMENT('M', 0, 300, 1)), 8307);

-- zadanie 1 f
CREATE INDEX A6_LRS_index ON A6_LRS(GEOM) INDEXTYPE IS 
MDSYS.SPATIAL_INDEX;

-- zadanie 2 a
SELECT SDO_LRS.VALID_MEASURE(GEOM, 500) AS VALID_500 FROM A6_LRS;

-- zadanie 2 b
SELECT SDO_LRS.GEOM_SEGMENT_END_PT(GEOM) AS END_PT FROM A6_LRS;

-- zadanie 2 c
SELECT SDO_LRS.LOCATE_PT(GEOM, 150, 0) AS KM150 FROM A6_LRS;

-- zadanie 2 d
SELECT SDO_LRS.CLIP_GEOM_SEGMENT(GEOM, 120, 160) AS CLIPPED FROM A6_LRS;

-- zadanie 2 e
select SDO_LRS.GET_NEXT_SHAPE_PT(A6.GEOM, C.GEOM) AS WJAZD_NA_A6
from A6_LRS A6, MAJOR_CITIES C where C.CITY_NAME = 'Slupsk';

-- zadanie 2 f
select SDO_LRS.GEOM_SEGMENT_LENGTH(SDO_LRS.OFFSET_GEOM_SEGMENT(
A6.GEOM, M.DIMINFO, 50, 200, 50,
 'unit=m arc_tolerance=1'))/1000 AS KOSZT
from A6_LRS A6, USER_SDO_GEOM_METADATA M
where M.TABLE_NAME = 'A6_LRS' and M.COLUMN_NAME = 'GEOM'

